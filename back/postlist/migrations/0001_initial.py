# Generated by Django 4.2 on 2024-01-11 01:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import postlist.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Ganre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ganre',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='sentence_image', verbose_name='画像')),
            ],
            options={
                'db_table': 'image',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='タグ')),
            ],
        ),
        migrations.CreateModel(
            name='TitleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='thumbnail', verbose_name='画像')),
            ],
            options={
                'db_table': 'title_image',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='コメント')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('is_public', models.BooleanField(default=True, verbose_name='公開設定')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio_Draft',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('title_image', models.CharField(blank=True, max_length=100, null=True)),
                ('movie', models.FileField(blank=True, null=True, upload_to='movie/', validators=[postlist.models.FileExtensionValidator(allowed_extensions=['MOV', 'MPEG4', 'mp4', 'mp3', 'mpeg']), postlist.models.file_size])),
                ('sentence', models.TextField(db_index=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('category_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='postlist.category')),
                ('ganre_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='postlist.ganre')),
                ('tag', models.ManyToManyField(blank=True, to='postlist.tag', verbose_name='タグ')),
                ('user_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio_Draft',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('title_image', models.CharField(blank=True, max_length=100, null=True)),
                ('movie', models.FileField(blank=True, null=True, upload_to='movie/', validators=[postlist.models.FileExtensionValidator(allowed_extensions=['MOV', 'MPEG4', 'mp4', 'mp3', 'mpeg']), postlist.models.file_size])),
                ('sentence', models.TextField(db_index=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('view_count', models.PositiveBigIntegerField(db_index=True, default=0)),
                ('is_public', models.BooleanField(default=True)),
                ('category_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='postlist.category')),
                ('ganre_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='postlist.ganre')),
                ('like_count', models.ManyToManyField(blank=True, related_name='like', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ManyToManyField(blank=True, to='postlist.tag', verbose_name='タグ')),
                ('user_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='コメント')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('is_public', models.BooleanField(default=True, verbose_name='公開設定')),
                ('reply', models.ManyToManyField(blank=True, related_name='reply', to='postlist.reply')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='postlist.portfolio', verbose_name='対象記事')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
